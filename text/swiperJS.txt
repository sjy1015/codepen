<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/xeicon@2.3.3/xeicon.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>


API

const 임의의 이름 = new Swiper(".적용할 클래스/#적용할 ID", {});

위에거 {}안에 옵션같은걸 쓸 수 있다. 기본적으로 960이하를 대상으로 하게 만들어져 있다

loop:true
반복, false하면 안함

slidesPerView:
한 화면에 보여줄 슬라이드 숫자
spaceBetween:
슬라이드 사이 간격

autoplay:{
	delay:ms로 넣어야한다 5초면 5000,
	disableOnInteraction: false 스와이프 후 자동재생 여부
}

pagination:{
	el:'적용할 .클래스 / #ID',
	clickable: true 클릭해서 이동가능하게 할지 안할지 여부
}
밑에 동그란 그거 관련.

적용한 클래스랑 적용한 클래스-bullet을 CSS로 설정가능


외부에서 앞뒤 이동 버튼 만들때는 

위에서 지정한 스와이퍼 이름.slidePrev();
위에서 지정한 스와이퍼 이름.slideNext();
이걸 click이벤트 안에 넣어주면 된다


centeredSlides:true
제일 처음 슬라이더를 가운데에 오게 하기
initialSlide:0
가운데 올 슬라이더 번호


on:{
	init:function(){
		mainCurrent=this.realIndex+1;
		mainTotal=this.slides.length;
		$('.account .current').text(mainCurrent);
		$('.account .total').text(mainTotal);
	},
	slideChange:function(){
		mainCurrent=this.realIndex+1;
		$('.account .current').text(mainCurrent);
	}
}

mainCurrent와 mainTotal은 위에서 let으로 미리 선언해놓을 것. let mainCurrent, mainTotal
이름은 바뀌어도 된다
뒤의 this.realIndex+1;은 지금 이 슬라이더의 활성화된 슬라이더 번호 +1이라는 뜻. 0 1 2 3으로 번호가 붙기 때문에 표시할때는 +1.
this.slides.lenght;는 지금 이 슬라이더의 슬라이드 숫자를 뜻한다.

init으로 기본상태를 지정

slideChange로 슬라이드 바뀔때 반응하게 한다